В классе PremiumCalculator приведён код добавления риска FLOOD
так сказать в лоб, без изменения структуры программы.

Посмотрите на то что получилось.

Прежде чем читать далее выскажите ваше мнение,
что хорошо, а что плохо в этом подходе.

Запишите ваше мнение в виде текста в свободной форме и
обсудите с ментором. Тут важны ваши рассуждения, критический
взгляд на всё решение, умение заглянуть в будущее, и т.д.

Оценивать собственное решение (собственный код) не так-то просто.

Нам всегда кажется, что наш код идеален и в нём нет плохих мест.
Но это не так! В любом решении есть плюсы и минусы.

Хороший программист должен подвергать сомнению собственный код!

А что если?
А можно ли сделать это лучше?
А если другой способ реализации?
Что будет с кодом если будем продолжать в том же стиле?
Давай попробуем новую идею!


Ну что же, давайте сравним наши варианты оценки добавления
нового риска FLOOD в лоб, без изменения структуры программы.

Нам кажется, что у этого решения есть следующие минусы:
- код класса PremiumCalculator растёт как на дрожах,
  если так будет продолжаться, то он скоро увеличится
  до очень больших размеров;

- для добавления нового риска нужно делать изменения
  в уже работающем коде (и изменения довольно серьёзные),
  при таких изменениях всегда есть риск, что-нибудь сломать;

- приходится плодить много дублирующегося кода.


Подумайте (по генерите идеи), как можно изменить архитектуру
нашего решения так, чтобы попробовать минимизировать выявленные
негативные стороны добавления нового риска.

Запишите ваши идеи в письменном виде в свободной форме и
обсудите с ментором (преподавателем).