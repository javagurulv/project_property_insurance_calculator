Перед тем как показать наш код доменной модели давайте обсудим
что такое перечисление и как с ним работать в Java.

В Java перечисление (enumeration) - это особый тип данных,
который позволяет определить набор именованных констант.

Перечисления представляют собой список фиксированных значений,
которые являются константами и не могут быть изменены в процессе
выполнения программы.

Они удобно используются для представления наборов связанных значений,
таких как дни недели, месяцы, цвета и т.д.

Главное условие - набор значений перечисления должен быть конечным
и достаточно не большим (например чтобы можно было руками его прописать).

Для создания перечисления в Java используется ключевое слово `enum`.

Вот пример простого перечисления, представляющего дни недели:

```java
enum Day {
    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY
}
```

После определения перечисления, можно использовать его константы в коде:

```java
Day today = Day.MONDAY;
System.out.println("Today is " + today); // Выводит "Today is MONDAY"
```

Также можно использовать перечисление в операторах `switch`:

```java
Day today = Day.WEDNESDAY;
switch (today) {
    case MONDAY:
    case TUESDAY:
    case WEDNESDAY:
    case THURSDAY:
    case FRIDAY:
        System.out.println("Weekday");
        break;
    case SATURDAY:
    case SUNDAY:
        System.out.println("Weekend");
        break;
}
```

Кроме этого, перечисления могут иметь свои поля, конструкторы и методы.

Например:

```java
enum Day {
    MONDAY("Monday"),
    TUESDAY("Tuesday"),
    // ...

    private final String displayName;

    Day(String displayName) {
        this.displayName = displayName;
    }

    public String getDisplayName() {
        return displayName;
    }
}
```

Также возможно определить абстрактные методы в перечислении,
чтобы каждая константа могла предоставить свою реализацию метода.

```java
enum Day {
    MONDAY {
        @Override
        public String getGreeting() {
            return "Hello, it's Monday!";
        }
    },
    TUESDAY {
        @Override
        public String getGreeting() {
            return "Hello, it's Tuesday!";
        }
    },
    // ...

    public abstract String getGreeting();
}
```

Таким образом, перечисления предоставляют удобный и безопасный
способ определения наборов констант в Java, а также позволяют
добавить дополнительную функциональность для каждой константы.


Как вы думаете для каких свойств нашей задачи подойдет тип данный
перечисление (enum)?

Ваша задача: познакомиться с перечислением (enum) в Java.
Изучить как
- создавать перечисления
- добавлять новые значения
- использовать значения перечисления в программном коде.

Для поиска информации воспользуйтесь любым источником в интернете.

Совет: при изучении новых понятий не просто читайте теорию в
интернете, но и попробуйте выполнить действия на практическом
примере. Для этого в коде приложения создайте класс
(например EnumPractice) и внутри его метода main()
поэкспериментируйте с изучаемыми концепциями на реальных примерах
(желательно из своей жизни). Практика позволит вам лучше понять
и усвоить изучаемый материал. Так же в качестве эксперимента
можете использовать тесты, сразу проверяя правильность результатов.